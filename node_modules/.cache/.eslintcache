[{"/Users/rickey/lighthouse/projects/BudgetApp/src/index.js":"1","/Users/rickey/lighthouse/projects/BudgetApp/src/reportWebVitals.js":"2","/Users/rickey/lighthouse/projects/BudgetApp/src/Home.js":"3","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Nav.js":"4","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Account.js":"5","/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/index.js":"6","/Users/rickey/lighthouse/projects/BudgetApp/src/hooks/useApplicationData.js":"7","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Sidebar.js":"8","/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/Pie.js":"9","/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/BarGraph.js":"10","/Users/rickey/lighthouse/projects/BudgetApp/src/hooks/useVisulMode.js":"11","/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/Budget_Show.js":"12","/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/DataRangePicker.js":"13","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Button.js":"14","/Users/rickey/lighthouse/projects/BudgetApp/src/helpers/selectors.js":"15","/Users/rickey/lighthouse/projects/BudgetApp/src/reducer/reducer.js":"16","/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/BudgetItemShow.js":"17","/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/LeftOver.js":"18","/Users/rickey/lighthouse/projects/BudgetApp/src/components/MyBudgets.js":"19","/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/Form.js":"20"},{"size":504,"mtime":1632942885000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1632376719000,"results":"23","hashOfConfig":"22"},{"size":1719,"mtime":1632951578000,"results":"24","hashOfConfig":"22"},{"size":459,"mtime":1632949095000,"results":"25","hashOfConfig":"22"},{"size":1024,"mtime":1632949095000,"results":"26","hashOfConfig":"22"},{"size":1696,"mtime":1632946867000,"results":"27","hashOfConfig":"22"},{"size":3437,"mtime":1632952073000,"results":"28","hashOfConfig":"22"},{"size":2738,"mtime":1632942885000,"results":"29","hashOfConfig":"22"},{"size":633,"mtime":1632942885000,"results":"30","hashOfConfig":"22"},{"size":579,"mtime":1632882592000,"results":"31","hashOfConfig":"22"},{"size":879,"mtime":1632766252000,"results":"32","hashOfConfig":"22"},{"size":1111,"mtime":1632945800000,"results":"33","hashOfConfig":"22"},{"size":2410,"mtime":1632811072000,"results":"34","hashOfConfig":"22"},{"size":522,"mtime":1632727151000,"results":"35","hashOfConfig":"22"},{"size":2948,"mtime":1632944909000,"results":"36","hashOfConfig":"22"},{"size":2206,"mtime":1632957214000,"results":"37","hashOfConfig":"22"},{"size":454,"mtime":1632811072000,"results":"38","hashOfConfig":"22"},{"size":411,"mtime":1632942885000,"results":"39","hashOfConfig":"22"},{"size":523,"mtime":1632942885000,"results":"40","hashOfConfig":"22"},{"size":1935,"mtime":1632943322000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"sf0irj",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"/Users/rickey/lighthouse/projects/BudgetApp/src/index.js",[],["88","89"],"/Users/rickey/lighthouse/projects/BudgetApp/src/reportWebVitals.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/Home.js",["90"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./Home.css\";\nimport useApplicationData from \"./hooks/useApplicationData\";\nimport Nav from \"./components/Nav\";\nimport Account from \"./components/Account\";\nimport MyBudgets from \"./components/MyBudgets\";\nimport Sidebar from \"./components/Sidebar\";\nimport Pie from \"./components/charts/Pie\";\nimport BarGraph from \"./components/charts/BarGraph\";\nimport CreateBudget from \"./components/budgets/index\";\nimport LeftOver from \"./components/charts/LeftOver\";\n\nconst Home = () => {\n  const { state, addCategories } = useApplicationData();\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav>\n          <Nav name={state.username} />\n          </nav>\n          <div>\n            <Sidebar email={state.email} />\n          </div>\n        \n\n        <Switch>\n\n          <Route path=\"/Create\">\n            <body id=\"create\">\n             <CreateBudget /> \n            </body>\n            \n          </Route>\n\n          <Route path=\"/MyBudgets\">\n            <body id=\"budgets\">\n              <MyBudgets />\n            </body>\n            \n          </Route>\n\n          <Route path=\"/\">\n              <h1 id=\"income\"> <Account /> </h1>\n            <body id=\"homepage\">\n              <div>\n                <Pie categories={state.categories} expenses={state.expenses} />\n                <br />\n                <BarGraph\n                  categories={state.categories}\n                  expenses={state.expenses}\n                />\n                <br />\n                <LeftOver />\n              </div>\n            </body>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default Home;","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Nav.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/Account.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/index.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/hooks/useApplicationData.js",["91"],"import axios from \"axios\";\nimport { useReducer, useEffect } from \"react\";\nimport reducer from \"../reducer/reducer\";\n\n/**\n * \n * data processed by using axios\n * geting data from api, inserting data to api and deleting data from api\n * including bookInterviews, cancelInterviews and getInterviews\n */\nexport default function useApplicatonData(){\n    const [state,dispatch] = useReducer(reducer,{\n        userId:2,\n        username: null,\n        budgets:{},\n        expenses:{}\n      });\n      \n    useEffect(()=>{\n     Promise.all([\n       axios.get('http://localhost:8080/api/users'),\n       axios.get(`http://localhost:8080/api/budgets/`),\n       axios.get(`http://localhost:8080/api/categories/`),\n       axios.get(`http://localhost:8080/api/expenses/`),\n       axios.get(`http://localhost:8080/api/incomes/`),\n    ])\n       .then((all) => {\n       \n       const username =all[0].data[2][\"first_name\"];\n       const budgets= all[1].data;\n       const categories = all[2].data;\n       const expenses = all[3].data;\n       const email = all[0].data[2][\"email\"];\n       const incomes=all[4].data;\n       \n       dispatch({\n        type: \"setData\",\n        value: {username,budgets, categories, expenses, email,incomes}\n      });\n     });\n     // eslint-disable-next-line\n    },[]);  \n\n\n    function createBudget(userId,budget){\n   \n      return axios.put(`http://localhost:8080/api/budgets/${userId}`, {budget}).then(res=> { \n       console.log(\"userid\",userId);\n        const result= JSON.parse(res.config.data)[\"budget\"];\n        \n        dispatch({ \n          type: \"createBudgets\", \n          \n          user_id:   userId, \n          name:  result.name,\n          budget_limit:  result.budget_limit,\n          start_date: result.start_date,\n          end_date:  result.end_date\n        });\n    })\n    }\n   \n   function updateBudget(id,budget,userid){\n      return axios.put(`http://localhost:8080/api/budgets/${userid}/${id}`,{budget}).then(res => {\n        const result= JSON.parse(res.config.data)[\"budget\"];\n        dispatch({ \n          type: \"updateBudgets\", \n          \n          id:     id,\n          name:  result.name,\n          budget_limit:  result.budget_limit,\n          start_date: result.start_date,\n          end_date:  result.end_date\n        });\n      });\n    } \n\n\n\n    function deleteBudget(id){\n      return axios.delete(`http://localhost:8080/api/budgets/${id}`).then(res => {\n       dispatch({ type: \"deleteBudget\",id: id});\n      });\n    } \n  \n      \n   \n    function addCategories(budgetID, category) {\n      return axios.put(`http://localhost:8080/api/categories/${budgetID}`, {category})\n      .then((res) => {\n        const result = JSON.parse(res.config.data)['category'];\n\n        dispatch({\n          type: \"addCategories\",\n          budget_id: budgetID,\n          category_type: result.category_type,\n          amount: result.amount\n        })\n      })\n\n    }\n    function addIncome(userId,incomes){\n   \n      return axios.put(`http://localhost:8080/api/income/${userId}`, {incomes}).then(res=> { \n       console.log(\"userid\",userId);\n        const result= JSON.parse(res.config.data)[\"income\"];\n        \n        dispatch({ \n          type: \"addIncome\", \n          \n          user_id:   userId, \n          income:  result.income,\n          income_type: result.income_type\n        });\n    })\n    }\n\n    return {state,createBudget, addCategories,deleteBudget,updateBudget,addCategories,addIncome};\n    \n}","/Users/rickey/lighthouse/projects/BudgetApp/src/components/Sidebar.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/Pie.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/BarGraph.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/hooks/useVisulMode.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/Budget_Show.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/DataRangePicker.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/Button.js",["92"],"import React from \"react\";\nimport classnames from 'classnames';\nimport './Button.css';\n\n// import \"components/Button.scss\";\n\nexport default function Button(props) {\n  //  const buttonClass = classnames('button', \n  //     {'button--confirm': props.confirm, \n  //      'button--danger': props.danger\n  //     });\n      \n   return (\n      <button \n        //  className={buttonClass}\n         onClick={props.onClick}\n         disabled={props.disabled}\n      >  \n         {props.children}\n         \n      </button>\n      );\n}","/Users/rickey/lighthouse/projects/BudgetApp/src/helpers/selectors.js",["93"],"export  function getBudgetByUserID(budgets,userId) {\n  const budgetArr=[];\n  for(const i in budgets){\n    if(budgets[i][\"user_id\"]===userId){\n      budgetArr.push(budgets[i]);\n    }\n  }\n  const result = budgetArr.reverse();\n  return result;\n}\n function dateFormat(day){\n     let d= new Date(day);\n     d=d.toISOString().split('T')[0];\n     return d;   \n }\nexport  function getBudgetByMonth(budgets,year,month,userId) {\n \n  const result={};\n  let arr = Object.values(budgets);\n  for(const budget of arr){\n\n     const startDate = budget.start_date.split('T')[0];\n     const  endDate = budget.end_date.split('T')[0];\n     const userid=budget.user_id;\n     let d1;\n     let d2;\n     \n     switch (month) {\n       case 1:\n          d1=dateFormat(year+'-01-01')\n          d2=dateFormat(year+'-01-31')\n          break;\n       case 2:\n          d1=dateFormat(year+'-02-01')\n          d2=dateFormat(year+'-02-28')\n          break;\n      case 3:\n          d1=dateFormat(year+'-03-01')\n          d2=dateFormat(year+'-03-31')\n          break;\n      case 4:\n          d1=dateFormat(year+'-04-01')\n          d2=dateFormat(year+'-04-30')\n          break;\n      case 5:\n          d1=dateFormat(year+'-05-01')\n          d2=dateFormat(year+'-05-31')\n          break;\n      case 6:\n          d1=dateFormat(year+'-06-01')\n          d2=dateFormat(year+'-06-30')\n          break;\n      case 7:\n          d1=dateFormat(year+'-07-01')\n          d2=dateFormat(year+'-07-31')\n          break;\n      case 8:\n          d1=dateFormat(year+'-08-01')\n          d2=dateFormat(year+'-08-31')\n          break;\n      case 9:\n          d1=dateFormat(year+'-09-01')\n          d2=dateFormat(year+'-09-30')\n          break;\n      case 10:\n          d1=dateFormat(year+'-10-01')\n          d2=dateFormat(year+'-10-31')\n          break;\n      case 11:\n          d1=dateFormat(year+'-11-01')\n          d2=dateFormat(year+'-11-30')\n          break;\n      case 12:\n          d1=dateFormat(year+'-12-01')\n          d2=dateFormat(year+'-12-31')\n          break;\n       default:\n         break;\n     }\n     console.log(d1,d2);\n    if((startDate>=d1)&&(endDate<=d2) && (userid===userId )) {\n      result[budget[\"name\"]]=budget[\"budget_limit\"];\n    }   \n  }\n  return  result;\n}\nexport  function getExpenseByMonth(expenses,categories,month,userId) {\n   const result={};\n  let arr = Object.values(expenses);\n  for(const expense of arr){\n    \n    const m=(new Date(expense.date)).getMonth()+1;\n  \n    if( m === month){\n     \n      if(Object.keys(result).includes((expense.category_id).toString())){\n         \n         result[expense.category_id] +=  expense.amount;\n      }else{\n         result[expense.category_id]= expense.amount;\n      }  \n    }\n  }\n  return getCategoryName(result,categories);\n}\nfunction getCategoryName(result,categories){\n  const obj={};\n  Object.keys(result).map((id) => {\n          \n          obj[categories[id].category_type] =result[id];\n        \n    });\n    return obj;\n}\n ","/Users/rickey/lighthouse/projects/BudgetApp/src/reducer/reducer.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/BudgetItemShow.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/charts/LeftOver.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/MyBudgets.js",[],"/Users/rickey/lighthouse/projects/BudgetApp/src/components/budgets/Form.js",["94"],"\nimport React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport useVisualMode from \"../../hooks/useVisulMode\";\nimport DateRange from \"./DataRangePicker\";\n\nexport default function Form(props) {\n  console.log(\"props\", props);\n  const [name, setName] = useState(props.name || \"\");\n  const [budget_limit, setbudget_limit] = useState(props.budgetLimit || 0);\n  const [start_date, setstart_date] = useState(props.startDate || null);\n  const [end_date, setend_date] = useState(props.endDate || null);\n\n  function reset() {\n    setName(\"\");\n    setbudget_limit(0);\n  }\n  function cancel() {\n    props.id? props.onCancel():reset();\n  }\n  function onSave() {\n    const budget = {\n      name: name,\n      budget_limit: budget_limit,\n      start_date: start_date,\n      end_date: end_date\n    };\n   \n    if(props.id){\n       props.onSave(props.id, budget,props.userId)\n      .then((res) => {\n        props.onCancel();\n      });\n    } else{\n       props.onSave(props.userId, budget)\n\n      .then((res) => {\n       reset();\n      });\n    }\n   \n\n  }\n  function getDate(startDate, endDate) {\n    setstart_date(startDate);\n    setend_date(endDate);\n  }\n  return (\n    <div>\n      <div>\n        <form autoComplete=\"off\">\n          <input name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Enter Budget Name\"\n            onChange={event => setName(event.target.value)}\n          />\n          <input\n            name=\"budget_imit\"\n            value={budget_limit}\n            type=\"text\"\n            placeholder=\"Enter Budget Limit\"\n            onChange={event => setbudget_limit(event.target.value)}\n          />\n        </form>\n      </div>\n      <DateRange getDate={getDate} startDate={props} endDate={props.endDate} mode={props.mode} />\n      <div>  <Button danger onClick={cancel}>Cancel</Button>\n        <Button confirm onClick={event => onSave()}> Save </Button>\n      </div>\n\n    </div>\n  );\n\n}\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":15,"column":18,"nodeType":"101","messageId":"102","endLine":15,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":118,"column":73,"nodeType":"105","messageId":"106","endLine":118,"endColumn":86},{"ruleId":"99","severity":1,"message":"107","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":108,"column":32,"nodeType":"110","messageId":"111","endLine":108,"endColumn":34},{"ruleId":"99","severity":1,"message":"112","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":21},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'addCategories' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'addCategories'.","ObjectExpression","unexpected","'classnames' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useVisualMode' is defined but never used.","no-global-assign","no-unsafe-negation"]